#version 430

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;
layout(r32f, binding = 0) uniform image3D vol_tex;

uniform ivec3 res;

void main() {

    ivec3 idx = ivec3(gl_GlobalInvocationID);
    
    // 3D texture coordinates from 1D index
    /*int x = idx % resx;
    int y = (idx / resx) % resy;
    int z = idx / (resx * resy);*/

    if(idx.x < res.x && idx.y < res.y && idx.z < res.z) {
        float value = min(imageLoad(vol_tex, idx).r, 1.0);
        imageStore(vol_tex, idx, vec4(value));
    }
}
