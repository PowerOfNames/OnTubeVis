#version 430

#define M_PI 3.14159265359

//***** begin interface of shape2d.glsl ***********************************
uniform ivec2 resolution;

uniform vec4 fill_color;
uniform vec4 border_color = vec4(1.0);
uniform float border_width = 0.0;

float get_feather_width();
vec2 get_shape_size();
vec4 get_active_color(vec4 color);
vec4 transform_world_to_window_space(vec2 p);
//***** end interface of shape2d.glsl ***********************************

//***** begin interface of fragment2d.glfs ***********************************
uniform layout(binding = 0) sampler2D tex;

void finish_sdf_fragment2d(in float signed_distance, in vec4 color);
void finish_sdf_fragment2d(in float signed_distance, in vec4 color, in vec2 texcoords);
void finish_fragment2d(in vec4 color);
void finish_fragment2d(in vec4 color, in vec2 texcoords);
//***** end interface of fragment2d.glfs ***********************************

in vec2 tex_coord;

vec3 sample_texture(vec2 coord) {
	int height = textureSize(tex, 0).t;
	int iv = int(coord.t * height);
	float v = float(iv + 0.5) / float(height);

	return texture(tex, vec2(coord.s, v)).rgb;
}

void main() {

	/*vec2 uv = tex_coord - 0.5;
	float theta = atan(uv.y, uv.x) + M_PI;
	float omega = (theta / (2.0 * M_PI));
	//omega += 0.25;
	omega += 0.125;
	if(omega > 1.0)
	omega -= 1.0;
	omega = 1.0 - omega;
	*/


	vec3 color = sample_texture(vec2(tex_coord.s, 1.0 - tex_coord.t));
	//color = texture(tex, vec2(omega, 9.5/10)).rgb;
	finish_fragment2d(vec4(color, 1.0));
	//finish_fragment2d(vec4(vec3(omega), 1.0));
}
